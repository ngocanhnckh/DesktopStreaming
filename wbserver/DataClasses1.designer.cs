#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace wbserver
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="custom")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertServerSetting(ServerSetting instance);
    partial void UpdateServerSetting(ServerSetting instance);
    partial void DeleteServerSetting(ServerSetting instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::wbserver.Properties.Settings.Default.customConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ServerSetting> ServerSettings
		{
			get
			{
				return this.GetTable<ServerSetting>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServerSettings")]
	public partial class ServerSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TextServerIP;
		
		private System.Nullable<int> _TextServerPort;
		
		private string _AudioServerIP;
		
		private System.Nullable<int> _AudioServerPort;
		
		private string _ImageServerIP;
		
		private System.Nullable<int> _ImageServerPort;
		
		private System.Nullable<bool> _TextServerOnline;
		
		private System.Nullable<bool> _AudioServerOnline;
		
		private System.Nullable<bool> _ImageServerOnline;
		
		private bool _AutoConfig;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTextServerIPChanging(string value);
    partial void OnTextServerIPChanged();
    partial void OnTextServerPortChanging(System.Nullable<int> value);
    partial void OnTextServerPortChanged();
    partial void OnAudioServerIPChanging(string value);
    partial void OnAudioServerIPChanged();
    partial void OnAudioServerPortChanging(System.Nullable<int> value);
    partial void OnAudioServerPortChanged();
    partial void OnImageServerIPChanging(string value);
    partial void OnImageServerIPChanged();
    partial void OnImageServerPortChanging(System.Nullable<int> value);
    partial void OnImageServerPortChanged();
    partial void OnTextServerOnlineChanging(System.Nullable<bool> value);
    partial void OnTextServerOnlineChanged();
    partial void OnAudioServerOnlineChanging(System.Nullable<bool> value);
    partial void OnAudioServerOnlineChanged();
    partial void OnImageServerOnlineChanging(System.Nullable<bool> value);
    partial void OnImageServerOnlineChanged();
    partial void OnAutoConfigChanging(bool value);
    partial void OnAutoConfigChanged();
    #endregion
		
		public ServerSetting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextServerIP", DbType="VarChar(50)")]
		public string TextServerIP
		{
			get
			{
				return this._TextServerIP;
			}
			set
			{
				if ((this._TextServerIP != value))
				{
					this.OnTextServerIPChanging(value);
					this.SendPropertyChanging();
					this._TextServerIP = value;
					this.SendPropertyChanged("TextServerIP");
					this.OnTextServerIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextServerPort", DbType="Int")]
		public System.Nullable<int> TextServerPort
		{
			get
			{
				return this._TextServerPort;
			}
			set
			{
				if ((this._TextServerPort != value))
				{
					this.OnTextServerPortChanging(value);
					this.SendPropertyChanging();
					this._TextServerPort = value;
					this.SendPropertyChanged("TextServerPort");
					this.OnTextServerPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AudioServerIP", DbType="VarChar(50)")]
		public string AudioServerIP
		{
			get
			{
				return this._AudioServerIP;
			}
			set
			{
				if ((this._AudioServerIP != value))
				{
					this.OnAudioServerIPChanging(value);
					this.SendPropertyChanging();
					this._AudioServerIP = value;
					this.SendPropertyChanged("AudioServerIP");
					this.OnAudioServerIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AudioServerPort", DbType="Int")]
		public System.Nullable<int> AudioServerPort
		{
			get
			{
				return this._AudioServerPort;
			}
			set
			{
				if ((this._AudioServerPort != value))
				{
					this.OnAudioServerPortChanging(value);
					this.SendPropertyChanging();
					this._AudioServerPort = value;
					this.SendPropertyChanged("AudioServerPort");
					this.OnAudioServerPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageServerIP", DbType="VarChar(50)")]
		public string ImageServerIP
		{
			get
			{
				return this._ImageServerIP;
			}
			set
			{
				if ((this._ImageServerIP != value))
				{
					this.OnImageServerIPChanging(value);
					this.SendPropertyChanging();
					this._ImageServerIP = value;
					this.SendPropertyChanged("ImageServerIP");
					this.OnImageServerIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageServerPort", DbType="Int")]
		public System.Nullable<int> ImageServerPort
		{
			get
			{
				return this._ImageServerPort;
			}
			set
			{
				if ((this._ImageServerPort != value))
				{
					this.OnImageServerPortChanging(value);
					this.SendPropertyChanging();
					this._ImageServerPort = value;
					this.SendPropertyChanged("ImageServerPort");
					this.OnImageServerPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextServerOnline", DbType="Bit")]
		public System.Nullable<bool> TextServerOnline
		{
			get
			{
				return this._TextServerOnline;
			}
			set
			{
				if ((this._TextServerOnline != value))
				{
					this.OnTextServerOnlineChanging(value);
					this.SendPropertyChanging();
					this._TextServerOnline = value;
					this.SendPropertyChanged("TextServerOnline");
					this.OnTextServerOnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AudioServerOnline", DbType="Bit")]
		public System.Nullable<bool> AudioServerOnline
		{
			get
			{
				return this._AudioServerOnline;
			}
			set
			{
				if ((this._AudioServerOnline != value))
				{
					this.OnAudioServerOnlineChanging(value);
					this.SendPropertyChanging();
					this._AudioServerOnline = value;
					this.SendPropertyChanged("AudioServerOnline");
					this.OnAudioServerOnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageServerOnline", DbType="Bit")]
		public System.Nullable<bool> ImageServerOnline
		{
			get
			{
				return this._ImageServerOnline;
			}
			set
			{
				if ((this._ImageServerOnline != value))
				{
					this.OnImageServerOnlineChanging(value);
					this.SendPropertyChanging();
					this._ImageServerOnline = value;
					this.SendPropertyChanged("ImageServerOnline");
					this.OnImageServerOnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoConfig", DbType="Bit NOT NULL")]
		public bool AutoConfig
		{
			get
			{
				return this._AutoConfig;
			}
			set
			{
				if ((this._AutoConfig != value))
				{
					this.OnAutoConfigChanging(value);
					this.SendPropertyChanging();
					this._AutoConfig = value;
					this.SendPropertyChanged("AutoConfig");
					this.OnAutoConfigChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
